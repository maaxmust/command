const express = require('express');
const axios = require('axios');
const cors = require('cors');

const app = express();
const port = process.env.PORT || 3000;
const apiKey = '9f2a7dab0d2248f89aa23315252802'; // Dein Key direkt im Code

app.use(cors());

/* ---------------- Nutzlos-API ---------------- */

function generateDailyValue(username) {
    const today = new Date().toISOString().split('T')[0];
    const normalizedUsername = username.toLowerCase();
    const seed = `${normalizedUsername}-${today}`;

    let hash = 0;
    for (let i = 0; i < seed.length; i++) {
        hash = (hash << 5) - hash + seed.charCodeAt(i);
    }

    return Math.abs(hash % 100) + 1;
}

app.get('/nutzlos/:username', (req, res) => {
    const username = req.params.username;
    const value = generateDailyValue(username);
    res.send(`${username}, du bist heute zu ${value}% nutzlos`);
});

/* ---------------- Wetter-API ---------------- */

function getWeatherEmoji(description) {
    const text = description.toLowerCase();

    if (text.includes('klar') || text.includes('sonnig')) return '‚òÄÔ∏è Klarer Himmel';
    if (text.includes('leicht bew√∂lkt')) return 'üå§Ô∏è Leicht bew√∂lkt';
    if (text.includes('bew√∂lkt')) return 'üå•Ô∏è Bew√∂lkt';
    if (text.includes('stark bew√∂lkt')) return '‚òÅÔ∏è Stark bew√∂lkt';
    if (text.includes('regen') && !text.includes('gewitter')) return 'üåßÔ∏è Regen';
    if (text.includes('nieselregen')) return 'üå¶Ô∏è Nieselregen';
    if (text.includes('schnee')) return '‚ùÑÔ∏è Schnee';
    if (text.includes('neuschnee')) return '‚ùÑÔ∏è Neuschnee';
    if (text.includes('schneeregen')) return 'üå®Ô∏è Schneeregen';
    if (text.includes('graupel')) return 'üå®Ô∏è Graupel';
    if (text.includes('hagel')) return 'üå®Ô∏è Hagel';
    if (text.includes('nebel') || text.includes('dunst')) return 'üå´Ô∏è Nebel';
    if (text.includes('wind')) return 'üå¨Ô∏è Windig';
    if (text.includes('sturm') || text.includes('orkan')) return 'üå™Ô∏è Sturm';
    if (text.includes('gewitter') || text.includes('blitz')) return '‚õàÔ∏è Gewitter';
    if (text.includes('regenbogen')) return 'üåà Regenbogen';

    return 'üåà Unbekanntes Wetter';
}

app.get('/weather/:city', async (req, res) => {
    // URL-encode die Stadt, damit Umlaute und Sonderzeichen funktionieren
    const city = encodeURIComponent(req.params.city);

    try {
        const controller = new AbortController();
        const timeout = setTimeout(() => controller.abort(), 5000);

        const response = await axios.get(
            `http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&lang=de`,
            { signal: controller.signal }
        );

        clearTimeout(timeout);

        const weather = response.data.current;
        const description = weather.condition.text;
        const emojiText = getWeatherEmoji(description);

        res.send(`Das Wetter in ${req.params.city} ist aktuell: ${emojiText}`);
    } catch (error) {
        if (error.name === 'AbortError') {
            res.send(`‚è≥ Die Wetteranfrage f√ºr ${req.params.city} hat zu lange gedauert. Bitte versuche es sp√§ter erneut.`);
        } else {
            res.send(`‚ö†Ô∏è Fehler beim Abrufen des Wetters f√ºr ${req.params.city}. Bitte √ºberpr√ºfe die Stadt.`);
        }
    }
});

/* ---------------- Root-Route ---------------- */

app.get('/', (req, res) => {
    res.send('API l√§uft! Verwende /nutzlos/DEIN_NAME oder /weather/STADT');
});

/* ---------------- Server starten ---------------- */

app.listen(port, () => {
    console.log(`üåç Server l√§uft auf Port ${port}`);
});
